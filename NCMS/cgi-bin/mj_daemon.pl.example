#!/usr/bin/env perl -w

package MjNCMS;
#
# (c) Fedor F Lejepekov, ffl.public@gmail.com, 2010
#

#
# Todu coach: If thereâ€™s such as thing as natural talent,
# it just means that the person will improve just a little faster than everyone else.
# There's no such thing as an innate talent that overcomes repeated effort and practice.
#
# (c) initalD
#
# Professor: I can wire anything directly into anything - I'm the professor!
#
# (c) Futurama
#
#
#               ,'``.._   ,'``.
#              :,--._:)\,:,._,.:       All Glory to
#              :`--,''   :`...';\      the HYPNO TOAD!
#               `,'       `---'  `.
#               /                 :
#              /                   \
#            ,'                     :\.___,-.
#           `...,---'``````-..._    |:       \
#             (                 )   ;:    )   \  _,-.
#              `.              (   //          `'    \
#               :               `.//  )      )     , ;
#             ,-|`.            _,'/       )    ) ,' ,'
#            (  :`.`-..____..=:.-':     .     _,' ,'
#             `,'\ ``--....-)='    `._,  \  ,') _ '``._
#          _.-/ _ `.       (_)      /     )' ; / \ \`-.'
#         `--(   `-:`.     `' ___..'  _,-'   |/   `.)
#             `-. `.`.``-----``--,  .'
#               |/`.\`'        ,','); SSt
#                   `         (/  (/
#
#
#

    our $VERSION = '0.001-pre-alpha';

    use lib qw~./ ./lib~;

    $ENV{'MOJO_APP'} ||= 'MjNCMS';
    $ENV{'MOJO_HOME'} ||= File::Spec->catdir(split '/', $FindBin::Bin);
    #$ENV{'MOJO_SERVER_DEBUG'} = 1;
    #$ENV{'MOJO_RELOAD'} = 1;
    
    my %daemon_cfgs = (
        secret => 'oyaebu', 
        
    );
    
    use common::sense;
    use base 'Mojolicious';

    use File::Spec;
    use FindBin;
    
    use MjNCMS::Config qw/:vars /;
    #use MjNCMS::Service qw/:subs /;

    #start once at script init
    sub startup {
        my $mojo = shift;
        
        $mojo = $mojo->secret($daemon_cfgs{'secret'});
        
        $mojo->log->level('debug');#0 to disable ???
        $mojo->log->path('./mj_log.log');
        #binmode STDERR, ':utf8';
        #$mojo->log->path(\*STDERR);
        
        $mojo->plugins->namespaces(['MjNCMS::Plugin', 'Mojolicious::Plugin']);
        #camelize will be used on plugin names, be ready for this:
            #use Mojo::ByteStream 'b';
            #print b('abc_def')->camelize; #output: 'AbcDef'
        #BTW, sequence is important
        
        $mojo->plugin('i18n');
        $mojo->plugin('mjncms_init');
        
        $mojo->plugin('mjncms_sessions');
        
        #Slow down about couple % for me (78-82 req/second with vs 82-85 without) 
        #on test machine, use if only nessesary so :)
        $mojo->plugin('mjncms_lang_prefixed_urls');
        
        $mojo->plugin('mjncms_routes_extra');
        $mojo->plugin('mjncms_tt_renderer');
        
        #
        # Kiff: Sir, remember that course correction you made?
        # Zapp: No.
        # Kiff: It's proving a little more suicidal than we'd initially hoped.
        # Zapp: I don't know what annoys me more, Kiff. Your cowardice or your stupidity. 
        #   We'll simply set a new course in that empty region of space over there, 
        #   near that blackish holish thing.
        #
        
        my $r = $mojo->routes;
        
        #like 'ladder' @ Mojolicious::Lite
        #$r = $r->bridge->to(controller => 'Main', action => 'start_session');# vvv 

        my $admin_root = $SESSION{'ADM_URL'} || '/mjadmin'; #it will work AFTER firstrun. Recheck this!
        my $user_root = $SESSION{'USR_URL'} || '/user'; #--//--
        my $shortlinks_root = $SESSION{'SHORTLINKS_URL'} || '/sl'; #--//--
        my $shortlinks_redir_root = $SESSION{'SHORTLINKS_REDIR_URL'} || '/r'; #--//--
         
        my $pages_extemsion = $SESSION{'EXTENSIONS_PAGE'} || '.html'; #--//--
        my $categoryes_extemsion = $SESSION{'EXTENSIONS_CATEGORY'} || '.htm'; #--//--
        
        my $pager_slug_entry = $SESSION{'PAGER_SLUG_ENTRY'} || '.p'; #--//--
        
        ################################################################
        #                           ADMIN SIDE
        ################################################################
        #Controller is also chamelized, no ConTent, but con_tent, etc
        #Action used "as is"
        
        #Admin panel index
        
        $r->route($admin_root.'/')->via('get')->
            to(controller => 'Main', action => 'mjadmin_index_get');
        
        #Except index page - user must strictly belong valid role setted @ MjNCMS::Config   
        my $adm_r = $r->route($admin_root);
        
        #$adm_r = $adm_r->over(role_id => 'admin_panel_roles');
        $adm_r = $adm_r->over(awp_id => 'admin_panel_awps');
        
        #Content Menus
        $adm_r->route('/menus')->via('get')->
            to(controller => 'menus', action => 'menus_rt_menus_get');
        $adm_r->route('/menus/add')->via('get')->
            to(controller => 'menus', action => 'menus_rt_menus_add_get');
        $adm_r->route('/menus/add/(:parent_menu_id)', {'parent_menu_id' => qr/\d+/})->via('get')->
            to(controller => 'menus', action => 'menus_rt_menus_add_get');
        $adm_r->route('/menus/add')->via('post')->
            to(controller => 'menus', action => 'menus_rt_menus_add_post');
        $adm_r->route('/menus/delete/(:rm_menu_id)', {'rm_menu_id' => qr/\d+/})->via('get')->
            to(controller => 'menus', action => 'menus_rt_menus_delete_get');
        $adm_r->route('/menus/delete')->via('post')->
            to(controller => 'menus', action => 'menus_rt_menus_delete_post');
        $adm_r->route('/menus/edit/(:menu_id)', {menu_id => qr/\d+/})->via('get')->
            to(controller => 'menus', action => 'menus_rt_menus_edit_get');
        $adm_r->route('/menus/edit')->via('post')->
            to(controller => 'menus', action => 'menus_rt_menus_edit_post');
        $adm_r->route('/menus/setsequence')->via('post')->
            to(controller => 'menus', action => 'menus_rt_menus_setsequence_post');
        $adm_r->route('/menus/managetrans/(:menu_id)', {menu_id => qr/\d+/})->via('get')->
            to(controller => 'menus', action => 'menus_rt_menus_managetrans_get');
        $adm_r->route('/menus/addtrans')->via('post')->
            to(controller => 'menus', action => 'menus_rt_menus_addtrans_post');
        $adm_r->route('/menus/updtrans')->via('post')->
            to(controller => 'menus', action => 'menus_rt_menus_updtrans_post');
        $adm_r->route('/menus/deltrans/(:menu_id)/(:menu_lang)' => {menu_id => qr/\d+/, menu_lang => qr/\w{2,4}/})->via('get')->
            to(controller => 'menus', action => 'menus_rt_menus_deltrans_get');
        
        #Content categories
        $adm_r->route('/content/cats')->via('get')->
            to(controller => 'content', action => 'content_rt_cats_get');
        $adm_r->route('/content/addcat')->via('get')->
            to(controller => 'content', action => 'content_rt_addcats_get');
        $adm_r->route('/content/addsubcat/(:parent_cat_id)', {parent_cat_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_addcats_get');
        $adm_r->route('/content/addsubcat')->via('post')->
            to(controller => 'content', action => 'content_rt_addcats_post');
        $adm_r->route('/content/catedit/(:cat_id)', {cat_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_editcats_get');
        $adm_r->route('/content/editcat')->via('post')->
            to(controller => 'content', action => 'content_rt_editcats_post');
        $adm_r->route('/content/catdelete/(:rm_cat_id)', {rm_cat_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_delcats_get');
        $adm_r->route('/content/setcatsequence')->via('post')->
            to(controller => 'content', action => 'content_rt_setcatsequence_post');
        $adm_r->route('/content/managecattrans/(:cat_id)', {cat_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_cats_managetrans_get');
        $adm_r->route('/content/addcattrans')->via('post')->
            to(controller => 'content', action => 'content_rt_cats_addtrans_post');
        $adm_r->route('/content/delcattrans/(:cat_id)/(:cat_lang)' => {cat_id => qr/\d+/, cat_lang => qr/\w{2,4}/})->via('get')->
            to(controller => 'content', action => 'content_rt_cats_deltrans_get');
        $adm_r->route('/content/updcattrans')->via('post')->
            to(controller => 'content', action => 'content_rt_cats_updtrans_post');     
        
        #Content pages
        $adm_r->route('/content/pages')->via('get')->
            to(controller => 'content', action => 'content_rt_pages_get');
        $adm_r->route('/content/addpage')->via('get')->
            to(controller => 'content', action => 'content_rt_addpages_get');
        $adm_r->route('/content/addpage')->via('post')->
            to(controller => 'content', action => 'content_rt_addpages_post');
        $adm_r->route('/content/editpage/(:page_id)', {page_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_editpages_get');
        $adm_r->route('/content/editpage/(:page_id)', {page_id => qr/\d+/})->via('post')->
            to(controller => 'content', action => 'content_rt_editpages_post');
        $adm_r->route('/content/delpage/(:page_id)', {page_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_deletepages_get');
        $adm_r->route('/content/page_managetrans/(:page_id)', {page_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_page_managetrans_get');
        $adm_r->route('/content/page_managetrans/(:page_id)/add', {page_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_page_managetrans_add_get');
        $adm_r->route('/content/page_managetrans/(:page_id)/save', {page_id => qr/\d+/})->via('post')->
            to(controller => 'content', action => 'content_rt_page_managetrans_save_post');
        $adm_r->route('/content/page_managetrans/(:page_id)/(:lang)/edit', {page_id => qr/\d+/, lang => qr/\w{2,4}/})->via('get')->
            to(controller => 'content', action => 'content_rt_page_managetrans_edit_get');
        $adm_r->route('/content/page_managetrans/(:page_id)/(:old_lang)/update', {page_id => qr/\d+/, old_lang => qr/\w{2,4}/})->via('post')->
            to(controller => 'content', action => 'content_rt_page_managetrans_update_post');
        $adm_r->route('/content/page_managetrans/(:page_id)/(:lang)/delete', {page_id => qr/\d+/, lang => qr/\w{2,4}/})->via('get')->
            to(controller => 'content', action => 'content_rt_page_managetrans_delete_get');
        
        #Content comments
        #next realise
        
        #Content tag clouds
        #next realise
        
        #Blocks
        $adm_r->route('/content/blocks')->via('get')->
            to(controller => 'content', action => 'content_rt_blocks_get');
        $adm_r->route('/content/blocks/add')->via('get')->
            to(controller => 'content', action => 'content_rt_blocks_add_get');
        $adm_r->route('/content/blocks/add')->via('post')->
            to(controller => 'content', action => 'content_rt_blocks_add_psot');
        $adm_r->route('/content/blocks/edit/(:block_id)', {block_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_blocks_edit_get');
        $adm_r->route('/content/blocks/edit/(:block_id)', {block_id => qr/\d+/})->via('post')->
            to(controller => 'content', action => 'content_rt_blocks_edit_post');
        $adm_r->route('/content/blocks/delete/(:block_id)', {block_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_blocks_delete_get');
        $adm_r->route('/content/blocks/transes/(:block_id)', {block_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_blocks_managetrans_get');
        $adm_r->route('/content/blocks/transes/(:block_id)/add', {block_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_blocks_managetrans_add_get');
        $adm_r->route('/content/blocks/transes/(:block_id)/add', {block_id => qr/\d+/})->via('post')->
            to(controller => 'content', action => 'content_rt_blocks_managetrans_add_post');
        $adm_r->route('/content/blocks/transes/(:block_id)/(:lang)/edit', {block_id => qr/\d+/})->via('get')->
            to(controller => 'content', action => 'content_rt_blocks_managetrans_edit_get');
        $adm_r->route('/content/blocks/transes/(:block_id)/(:lang)/edit', {block_id => qr/\d+/})->via('post')->
            to(controller => 'content', action => 'content_rt_blocks_managetrans_edit_post');
        $adm_r->route('/content/blocks/transes/(:block_id)/(:lang)/delete', {block_id => qr/\d+/, lang => qr/\w{2,4}/})->via('get')->
            to(controller => 'content', action => 'content_rt_blocks_managetrans_delete_get');
                    
        #"Subscribe" routes
        #next realise
        
        #Content short urls
        $adm_r->route('/content/short_urls')->via('get')->
            to(controller => 'content', action => 'content_rt_short_urls_get');
        $adm_r->route('/content/short_urls/add_grp')->via('get')->
            to(controller => 'content', action => 'content_rt_short_url_groups_add_get');
        $adm_r->route('/content/short_urls/add_grp')->via('post')->
            to(controller => 'content', action => 'content_rt_short_url_groups_add_post');
        $adm_r->route('/content/short_urls/edit_grp/(:sugrp_id)')->via('get')->
            to(controller => 'content', action => 'content_rt_short_url_groups_edit_get');
        $adm_r->route('/content/short_urls/edit_grp/(:sugrp_id)')->via('post')->
            to(controller => 'content', action => 'content_rt_short_url_groups_edit_post');
        $adm_r->route('/content/short_urls/delete_grp/(:sugrp_id)')->via('get')->
            to(controller => 'content', action => 'content_rt_short_url_groups_delete_get');
        $adm_r->route('/content/short_urls/add_url')->via('post')->
            to(controller => 'content', action => 'content_rt_short_urls_add_post');
        $adm_r->route('/content/short_urls/delete_url/(:alias_id)')->via('get')->
            to(controller => 'content', action => 'content_rt_short_urls_delete_get');
        
        #File management
        $adm_r->route('/content/filemanager')->via('get')->
            to(controller => 'content', action => 'content_filemanager_get');
        
        #Translations
        $adm_r->route('/translations')->via('get')->
            to(controller => 'translations', action => 'translations_rt_poollist_get');
        $adm_r->route('/translations/set_strings/(:lang)', {lang => qr/\w{2,4}/})->via('get')->
            to(controller => 'translations', action => 'translations_rt_set_strings_get');
        $adm_r->route('/translations/set_strings/(:lang)', {lang => qr/\w{2,4}/})->via('post')->
            to(controller => 'translations', action => 'translations_rt_set_strings_post');
        $adm_r->route('/translations/clear_cache/(:lang)', {lang => qr/\w{2,4}/})->via('get')->
            to(controller => 'translations', action => 'translations_rt_clear_cache_get');
            
        #System variables - store @db all settings from $$cfg except DB settings && write them over $$cfg @ init
        #next realise
        
        #Permissions
        $adm_r->route('/permissions')->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_permissions_get');
        $adm_r->route('/permissions/add')->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_permissions_add_get');
        $adm_r->route('/permissions/add')->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_permissions_add_post');
        $adm_r->route('/permissions/edit/(:perm_id)', {perm_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_permissions_edit_get');
        $adm_r->route('/permissions/edit/(:perm_id)', {perm_id => qr/\d+/})->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_permissions_edit_post');
        $adm_r->route('/permissions/delete/(:perm_id)', {perm_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_permissions_delete_get');
            
        #Automated workplaces / Roles management
        $adm_r->route('/awp_roles')->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_get');
        $adm_r->route('/awp_roles/add_awp')->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_add_awp_get');
        $adm_r->route('/awp_roles/add_awp')->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_add_awp_post');
        $adm_r->route('/awp_roles/edit_awp/(:awp_id)', {awp_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_edit_awp_get');
        $adm_r->route('/awp_roles/edit_awp/(:awp_id)', {awp_id => qr/\d+/})->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_edit_awp_post');
        $adm_r->route('/awp_roles/delete_awp/(:awp_id)', {awp_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_delete_awp_get');
        $adm_r->route('/awp_roles/setperm_awp/(:awp_id)', {awp_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_setperm_awp_get');
        $adm_r->route('/awp_roles/setperm_awp/(:awp_id)', {awp_id => qr/\d+/})->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_setperm_awp_post');
        $adm_r->route('/awp_roles/add_role')->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_add_role_get');
        $adm_r->route('/awp_roles/add_role')->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_add_role_post');
        $adm_r->route('/awp_roles/edit_role/(:role_id)', {role_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_edit_role_get');
        $adm_r->route('/awp_roles/edit_role/(:role_id)', {role_id => qr/\d+/})->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_edit_role_post');
        $adm_r->route('/awp_roles/delete_role/(:role_id)', {role_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_delete_role_get');
        $adm_r->route('/awp_roles/setperm_role/(:role_id)', {role_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_setperm_role_get');
        $adm_r->route('/awp_roles/setperm_role/(:role_id)', {role_id => qr/\d+/})->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_awproles_setperm_role_post');           
        
        #User Management
        $adm_r->route('/users')->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_users_get');
        $adm_r->route('/users/add')->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_users_add_get');
        $adm_r->route('/users/add')->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_users_add_post');
        $adm_r->route('/users/edit/(:member_id)', {member_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_users_edit_get');
        $adm_r->route('/users/edit/(:member_id)', {member_id => qr/\d+/})->via('post')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_users_edit_post');
        $adm_r->route('/users/delete/(:member_id)', {member_id => qr/\d+/})->via('get')->
            to(controller => 'usercontroller', action => 'usercontroller_rt_users_delete_get');
        
        $r->route($admin_root.'/(*:unknown_route)')->via('get')->
            to(controller => 'Main', action => 'seems_like_u_have_no_access_to_be_here');
        
        ################################################################
        #                           CONTENT SIDE
        ################################################################
        #Index sealing, 
        #page with slug 'index' would be dispayed by default ( if exists :) )
        $r->route('/')->via('get')->
            to(controller => 'content_pages_site_read', action => 'content_rt_page_get');

        #Public file management
        $r->route('/content/filemanager_connector')->
            to(
                controller => 'content_filemanager_site_write', 
                action => 'content_rt_filemanager_connector_any'
            );
        
        #Public user routes - login/logout/edit/reg/reg_confirm
        my $usr_r = $r->route($user_root);
        $usr_r->route('/')->via('get')->
            to(
                controller => 'usercontroller_site_read', 
                action => 'usercontroller_rt_user_profile_get'
            );
        $usr_r->route('/login')->via('get')->
            to(
                controller => 'usercontroller_site_read', 
                action => 'usercontroller_rt_user_login_get'
            );
        $usr_r->route('/login')->via('post')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_login_post'
            );
        $usr_r->route('/logout')->
            to(
                controller => 'usercontroller_site_read', 
                action => 'usercontroller_rt_user_logout_any'
            );
        $usr_r->route('/role_sw')->via('post')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_rolesw_post'
            );
        $usr_r->route('/user_sw')->via('post')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_usersw_post'
            );
        $usr_r->route('/register')->via('get')->
            to(
                controller => 'usercontroller_site_read', 
                action => 'usercontroller_rt_user_register_get'
            );
        $usr_r->route('/register')->via('post')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_register_post'
            );
        $usr_r->route('/confirm/(:confirmation_code)')->via('get')->
            to(
                controller => 'usercontroller_site_read', 
                action => 'usercontroller_rt_user_confirm_get'
            );
        $usr_r->route('/confirm')->via('post')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_confirm_post'
            );
        $usr_r->route('/reconfirm_email')->via('get')->
            to(
                controller => 'usercontroller_site_read', 
                action => 'usercontroller_rt_user_reconfirm_email_get'
            );
        $usr_r->route('/reconfirm_email')->via('post')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_reconfirm_email_post'
            );
        $usr_r->route('/profile')->via('get')->
            to(
                controller => 'usercontroller_site_read', 
                action => 'usercontroller_rt_user_profile_get'
            );
        $usr_r->route('/profile')->via('post')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_profile_post'
            );
        $usr_r->route('/forgot_password')->via('get')->
            to(
                controller => 'usercontroller_site_read', 
                action => 'usercontroller_rt_user_forgot_password_get'
            );
        $usr_r->route('/forgot_password')->via('post')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_forgot_password_post'
            );
        $usr_r->route('/rest_pass/(:login)/(:crc)')->via('get')->
            to(
                controller => 'usercontroller_site_write', 
                action => 'usercontroller_rt_user_rest_pass_get'
            );

        #Shortlinks thing
        my $sl_r = $r->route($shortlinks_root);
        $sl_r->route('/add')->via('get')->
            to(
                controller => 'content_shortlinks_site_read', 
                action => 'content_rt_shortlink_add_get'
            );
        $sl_r->route('/add')->via('post')->
            to(
                controller => 'content_shortlinks_site_write', 
                action => 'content_rt_shortlink_add_post'
            );
        
        my $slr_r = $r->route($shortlinks_redir_root);
        $slr_r->route('/(:alias)')->via('get')->
            to(
                controller => 'content_shortlinks_site_read', 
                action => 'content_rt_shortlink_redirect_get'
            );
        $slr_r->route('/(:sugrp_id)/(:alias)')->via('get')->
            to(
                controller => 'content_shortlinks_site_read', 
                action => 'content_rt_shortlink_redirect_get'
            );

        #Public content routes browse cats, view pages
        #Everything left we blame as content category/page
        $r->route(
            '/(*page_slug)' . 
            $pager_slug_entry . 
            '(:page_num)' . 
            $pages_extemsion, {page_num => qr/\d+/})->via('get')->
            to(controller => 'content_pages_site_read', action => 'content_rt_page_get');
        $r->route(
            '/(*category_slug)' . 
            $pager_slug_entry . 
            '(:page_num)' . 
            $categoryes_extemsion, {page_num => qr/\d+/})->via('get')->
            to(
                controller => 'content_categories_site_read', 
                action => 'content_rt_category_get'
            );
        $r->route('/(*page_slug)' . $pages_extemsion)->via('get')->
            to(
                controller => 'content_pages_site_read', 
                action => 'content_rt_page_get'
            );
        $r->route('/(*category_slug)' . $categoryes_extemsion)->via('get')->
            to(
                controller => 'content_categories_site_read', 
                action => 'content_rt_category_get'
            );
        
    }

    ########################################################################
    #                       1... 2... 3... Blasta!
    ########################################################################
    #like 'shagadelic' @ Mojolicious::Lite
    if (scalar @ARGV){
        #if command line params set
        Mojolicious->start(@ARGV);
    }
    else {
        #example of out-of-box start ready settings
        Mojolicious->start('fcgi_prefork', 
        #shagadelic('fastcgi', 
        #shagadelic('fcgi', 
        #shagadelic('daemon', 
            #'--daemonize'
            '--listen', 'mojotest:3042', 
            '--start', '2', 
            '--minspare', '2',
            '--maxspare', '4'
        );
    }

1;

package MjNCMS::Main;
#
# (c) Fedor F Lejepekov, ffl.public@gmail.com, 2010
#
    use common::sense;
    use base 'Mojolicious::Controller';

    use MjNCMS::Config qw/:vars /;
    #use MjNCMS::Service qw/:subs /;

    #admin panel main page
    sub mjadmin_index_get () {
        
        my $self = shift;
        
        #$SESSION{'PAGE_CACHABLE'} = 1;
        
        $TT_CFG{'tt_controller'}=$TT_VARS{'tt_controller'}='admin';
        $TT_CFG{'tt_action'}=$TT_VARS{'tt_action'}='index';
        $self->render('admin/admin_index');
        
    };
    
    sub seems_like_u_have_no_access_to_be_here {
        my $self = shift;
        $self->render(text => 'Seems like you have no access for this route');
    }
    
    #sub test_render_this_is_it{
    #    my $self = shift;
    #    $self->render(text => 'This is it');
    #}
    
    #sub start_session (){ {
    #   #::Lite ladder example ^^^
    #   my $c = shift;#controller obj
    #}

1;
